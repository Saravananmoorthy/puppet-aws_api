####Table of Contents

1. [Overview](#overview)
2. [Module Description - What the module does and why it is useful](#module-description)
3. [Setup - The basics of getting started with aws_api](#setup)
    * [What aws_api affects](#what-aws_api-affects)
    * [Setup requirements](#setup-requirements)
    * [Beginning with aws_api](#beginning-with-aws_api)
4. [Usage - Configuration options and additional functionality](#usage)
5. [Reference - An under-the-hood peek at what the module is doing and how](#reference)
5. [Limitations - OS compatibility, etc.](#limitations)
6. [Development - Guide for contributing to the module](#development)

##Overview

This module provides a bridge allowing you to setup Amazon Web Services resources (such as VPCs and Subnets) using the puppet DSL.

##Module Description

##Setup

###What aws_api affects

This module can be used to re-configure (and purge!) your AWS configs.

Please be extremely careful when using it.

###Setup Requirements

Pluginsync must be enabled to use this module, or you have to be running standalone

You need to have the following environment variables setup to use this:

  * AWS_ACCESS_KEY_ID
  * AWS_SECRET_ACCESS_KEY

###Beginning with aws_api

Try exploring using puppet resource, in a checkout:

  puppet resource aws_subnet --libdir lib

##Usage

For all types, the name param is the namevar and takes the value of the
'Name' tag if set, otherwise the Amazon assigned ID. All resources generated
by this module will have the 'Name' tag set to the value of the name property (by default the resource title).

It is recommended that all resources by given a unique name rather than using
the autogenerated ids in manifests (but either should work interchangably in all cases)

All types support additional user set tags in the 'tags' property

## Types Reference

### aws_vpc

Read-only properties:

 * region
 * cidr
 * instance_tenancy

Read-write properties:

 * dhcp_options

### aws_subnet 

Read-only properties:
  * vpc
  * cidr
  * az
  * route_table

### aws_cgw

Read-only properties:

  * region
  * ip_address
  * bgp_asn
  * type

### aws_dopts

It would/should be possible to replace user created dhcp options sets,
without having to remove and create a new one (as puppet could do this
under the hood). This is not yet supported.

Read-only properties:
  * region
  * domain_name
  * domain_name_servers (Array)
  * ntp_servers (Array)
  * netbios_name_servers (Array)
  * netbios_node_type

### aws_igw

Read-only properties:

  * vpc

### aws_routetable

Properties: FIXME

  * subnets
  * routes
  * propagation_vgws

### aws_vgw

### aws_vpn

  * vgw_id
  * vpc_id
  * type
  * routing
  * static_routes

##Limitations

This is where you list OS compatibility, version compatibility, etc.

##Development

Patches are welcome! Please submit a pull request on github :)


